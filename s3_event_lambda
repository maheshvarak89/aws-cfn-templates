---
AWSTemplateFormatVersion: '2010-09-09'

Description: Uploading an object to S3 bucket triggers a Lambda event.

Parameters:
  BucketName:
    Description: S3 Bucket name
    Type: String
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    DependsOn: BucketPermission
    Properties:
      BucketName: !Ref BucketName
      NotificationConfiguration:
        LambdaConfigurations:
        - Event: 's3:ObjectCreated:Put'
          Function: !GetAtt MyLambda.Arn
  BucketPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref MyLambda
      Principal: s3.amazonaws.com
      SourceAccount: !Ref "AWS::AccountId"
      SourceArn: !Sub "arn:aws:s3:::${BucketName}"
  MyLambda:
    Type: AWS::Lambda::Function
    Properties:
      Description:  Lambda function
      Handler: index.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: !Sub |
          def lambda_handler(event, context):
            print("Request received")
            return
      Timeout: 60
      Runtime: python3.7
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal: {Service: [lambda.amazonaws.com]}
          Action: ['sts:AssumeRole']
      Path: /
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

Outputs:
  S3Bucket:
    Value: !Ref S3Bucket
    Description: S3 Bucket for object storage
  LambdafunctionName:
    Value: !Ref MyLambda
    Description: Lambda Function
